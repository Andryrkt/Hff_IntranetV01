<?php

namespace App\Proxies\__CG__\App\Entity\tik;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TkiReplannification extends \App\Entity\tik\TkiReplannification implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'id', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'numeroTicket', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'oldDateDebutPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'oldDateFinPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'newDateDebutPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'newDateFinPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'demandeSupportInfo', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'user', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'planning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'dateModification'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'id', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'numeroTicket', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'oldDateDebutPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'oldDateFinPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'newDateDebutPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'newDateFinPlanning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'demandeSupportInfo', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'user', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'planning', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\tik\\TkiReplannification' . "\0" . 'dateModification'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TkiReplannification $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroTicket()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroTicket', []);

        return parent::getNumeroTicket();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroTicket($numeroTicket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroTicket', [$numeroTicket]);

        return parent::setNumeroTicket($numeroTicket);
    }

    /**
     * {@inheritDoc}
     */
    public function getOldDateDebutPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOldDateDebutPlanning', []);

        return parent::getOldDateDebutPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setOldDateDebutPlanning($oldDateDebutPlanning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldDateDebutPlanning', [$oldDateDebutPlanning]);

        return parent::setOldDateDebutPlanning($oldDateDebutPlanning);
    }

    /**
     * {@inheritDoc}
     */
    public function getOldDateFinPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOldDateFinPlanning', []);

        return parent::getOldDateFinPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setOldDateFinPlanning($oldDateFinPlanning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldDateFinPlanning', [$oldDateFinPlanning]);

        return parent::setOldDateFinPlanning($oldDateFinPlanning);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewDateDebutPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewDateDebutPlanning', []);

        return parent::getNewDateDebutPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setNewDateDebutPlanning($newDateDebutPlanning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewDateDebutPlanning', [$newDateDebutPlanning]);

        return parent::setNewDateDebutPlanning($newDateDebutPlanning);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewDateFinPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewDateFinPlanning', []);

        return parent::getNewDateFinPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setNewDateFinPlanning($newDateFinPlanning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewDateFinPlanning', [$newDateFinPlanning]);

        return parent::setNewDateFinPlanning($newDateFinPlanning);
    }

    /**
     * {@inheritDoc}
     */
    public function getDemandeSupportInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDemandeSupportInfo', []);

        return parent::getDemandeSupportInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDemandeSupportInfo($demandeSupportInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDemandeSupportInfo', [$demandeSupportInfo]);

        return parent::setDemandeSupportInfo($demandeSupportInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlanning', []);

        return parent::getPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlanning($planning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlanning', [$planning]);

        return parent::setPlanning($planning);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation(\DateTimeInterface $dateCreation): \App\Entity\tik\TkiReplannification
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModification(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModification', []);

        return parent::getDateModification();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModification(\DateTimeInterface $dateModification): \App\Entity\tik\TkiReplannification
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModification', [$dateModification]);

        return parent::setDateModification($dateModification);
    }

    /**
     * {@inheritDoc}
     */
    public function onPrePersist(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPrePersist', []);

        parent::onPrePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function onPreUpdate(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreUpdate', []);

        parent::onPreUpdate();
    }

}
