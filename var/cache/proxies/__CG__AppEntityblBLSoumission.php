<?php

namespace App\Proxies\__CG__\App\Entity\bl;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BLSoumission extends \App\Entity\bl\BLSoumission implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'id', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'agenceUser', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'serviceUser', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'utilisateur', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'pathFichierSoumis', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'dateModification'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'id', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'agenceUser', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'serviceUser', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'utilisateur', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'pathFichierSoumis', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\bl\\BLSoumission' . "\0" . 'dateModification'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BLSoumission $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAgenceUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgenceUser', []);

        return parent::getAgenceUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgenceUser($agenceUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgenceUser', [$agenceUser]);

        return parent::setAgenceUser($agenceUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceUser', []);

        return parent::getServiceUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceUser($serviceUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceUser', [$serviceUser]);

        return parent::setServiceUser($serviceUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtilisateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtilisateur', []);

        return parent::getUtilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtilisateur($utilisateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtilisateur', [$utilisateur]);

        return parent::setUtilisateur($utilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getPathFichierSoumis()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPathFichierSoumis', []);

        return parent::getPathFichierSoumis();
    }

    /**
     * {@inheritDoc}
     */
    public function setPathFichierSoumis($pathFichierSoumis)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPathFichierSoumis', [$pathFichierSoumis]);

        return parent::setPathFichierSoumis($pathFichierSoumis);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation(\DateTimeInterface $dateCreation): \App\Entity\bl\BLSoumission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModification(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModification', []);

        return parent::getDateModification();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModification(\DateTimeInterface $dateModification): \App\Entity\bl\BLSoumission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModification', [$dateModification]);

        return parent::setDateModification($dateModification);
    }

    /**
     * {@inheritDoc}
     */
    public function onPrePersist(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPrePersist', []);

        parent::onPrePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function onPreUpdate(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreUpdate', []);

        parent::onPreUpdate();
    }

}
